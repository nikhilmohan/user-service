version: 2.1 # use CircleCI 2.0
jobs: # a collection of steps
  build: # runs not using Workflows must have a `build` job as entry point

    working_directory: ~/circleci-user-service # directory where steps will run

    docker: # run the steps with Docker
      - image: circleci/openjdk:11-stretch # ...with this image as the primary container; this is where all `steps` will run

    steps: # a collection of executable commands

      - checkout # check out source code to working directory

      - restore_cache: # restore the saved cache after the first run or if `pom.xml` has changed
          # Read about caching dependencies: https://circleci.com/docs/2.0/caching/
          key: circleci-user-service-{{ checksum "pom.xml" }}

      - run: mvn dependency:go-offline # gets the project dependencies

      - save_cache: # saves the project dependencies
          paths:
            - ~/.m2
          key: circleci-user-service-{{ checksum "pom.xml" }}

      - run:
          name: Analyze on SonarCloud
          command: mvn verify sonar:sonar # run the actual tests

      - store_test_results: # uploads the test metadata from the `target/surefire-reports` directory so that it can show up in the CircleCI dashboard.
          # Upload test results for display in Test Summary: https://circleci.com/docs/2.0/collect-test-data/
          path: target/surefire-reports

      - store_artifacts: # store the uberjar as an artifact
          # Upload test summary for display in Artifacts: https://circleci.com/docs/2.0/artifacts/
          path: target/user-service-0.0.1-SNAPSHOT.jar
      # See https://circleci.com/docs/2.0/deployment-integrations/ for deploy examples
      - run:
          name: Setup environment variables
          command: |
            echo 'export TAG=0.1.${CIRCLE_BUILD_NUM}' >> $BASH_ENV
            echo 'export IMAGE_NAME=user-service' >> $BASH_ENV
      - setup_remote_docker:
          version: 19.03.13
      - run:
          name: Build and push Docker image
          command: |
            docker build -t nikmohan81/$IMAGE_NAME:$TAG -t nikmohan81/$IMAGE_NAME:latest .
            docker login -u $DOCKER_USERNAME -p $DOCKER_PASSWORD
            docker push nikmohan81/$IMAGE_NAME:$TAG
            docker push nikmohan81/$IMAGE_NAME:latest
orbs:
  sonarcloud: sonarsource/sonarcloud@1.0.0
workflows:
  main:
    jobs:
      - build:
          context:
            - sonarcloud-nikhilmohan-context
            - docker-context